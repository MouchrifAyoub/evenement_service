"""initial models

Revision ID: ed35839d3258
Revises: c6e4c3d1d480
Create Date: 2025-05-02 14:27:18.669334

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ed35839d3258'
down_revision: Union[str, None] = 'c6e4c3d1d480'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('demande_evenement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('lieux', sa.String(), nullable=False),
    sa.Column('date_evenement', sa.Date(), nullable=False),
    sa.Column('statut', sa.Enum('EN_ATTENTE', 'VALIDE', 'REFUSEE', name='statutdemandeenum'), nullable=True),
    sa.Column('motif_refus', sa.Text(), nullable=True),
    sa.Column('cree_par', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='evenement'
    )
    op.create_index(op.f('ix_evenement_demande_evenement_id'), 'demande_evenement', ['id'], unique=False, schema='evenement')
    op.create_table('evenement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(), nullable=False),
    sa.Column('date_evenement', sa.Date(), nullable=False),
    sa.Column('lieu', sa.String(), nullable=False),
    sa.Column('nb_participants', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('EN_PREPARATION', 'PRET', 'ANNULE', name='statutevenementenum'), nullable=True),
    sa.Column('demande_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['demande_id'], ['evenement.demande_evenement.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='evenement'
    )
    op.create_index(op.f('ix_evenement_evenement_id'), 'evenement', ['id'], unique=False, schema='evenement')
    op.create_table('budget',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('montant_estime', sa.Integer(), nullable=False),
    sa.Column('montant_valide', sa.Integer(), nullable=True),
    sa.Column('valide_par_service_financier', sa.Boolean(), nullable=True),
    sa.Column('evenement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['evenement_id'], ['evenement.evenement.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='evenement'
    )
    op.create_index(op.f('ix_evenement_budget_id'), 'budget', ['id'], unique=False, schema='evenement')
    op.create_table('logistique',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('materiel_necessaire', sa.String(), nullable=True),
    sa.Column('transport_necessaire', sa.String(), nullable=True),
    sa.Column('evenement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['evenement_id'], ['evenement.evenement.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='evenement'
    )
    op.create_index(op.f('ix_evenement_logistique_id'), 'logistique', ['id'], unique=False, schema='evenement')
    op.drop_index('ix_evenement_evenements_id', table_name='evenements', schema='evenement')
    op.drop_table('evenements', schema='evenement')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('evenements',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_evenement', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('lieu', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('budget_estime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('besoins_logistiques', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('statut', postgresql.ENUM('EN_ATTENTE', 'VALIDE', 'REFUSE', 'EN_PREPARATION', 'PRET', 'ANNULE', name='event_statut_enum'), autoincrement=False, nullable=False),
    sa.Column('commentaire_refus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cree_par', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('est_etudiant', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='evenements_pkey'),
    schema='evenement'
    )
    op.create_index('ix_evenement_evenements_id', 'evenements', ['id'], unique=False, schema='evenement')
    op.drop_index(op.f('ix_evenement_logistique_id'), table_name='logistique', schema='evenement')
    op.drop_table('logistique', schema='evenement')
    op.drop_index(op.f('ix_evenement_budget_id'), table_name='budget', schema='evenement')
    op.drop_table('budget', schema='evenement')
    op.drop_index(op.f('ix_evenement_evenement_id'), table_name='evenement', schema='evenement')
    op.drop_table('evenement', schema='evenement')
    op.drop_index(op.f('ix_evenement_demande_evenement_id'), table_name='demande_evenement', schema='evenement')
    op.drop_table('demande_evenement', schema='evenement')
    # ### end Alembic commands ###
